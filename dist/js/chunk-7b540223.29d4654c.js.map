{"version":3,"sources":["webpack:///./src/components/frontend/developer/quiz/takequiz.vue?84d5","webpack:///./src/components/frontend/developer/quiz/takequiz.vue?9337","webpack:///src/components/frontend/developer/quiz/takequiz.vue","webpack:///./src/components/frontend/developer/quiz/takequiz.vue?9a66","webpack:///./src/components/frontend/developer/quiz/takequiz.vue","webpack:///./src/services/QuizService.js"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_takequiz_vue_vue_type_style_index_0_id_4c303b68_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_takequiz_vue_vue_type_style_index_0_id_4c303b68_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_c","_self","staticStyle","min-height","attrs","id","background-color","style","padding","background","marginTop","padding-right","padding-left","padding-top","percent","form","staticClass","xs","span","offset","sm","md","lg","xl","_v","_s","steps","current","text","color","error","_e","_l","answer","key","model","value","callback","$$v","currentanswer","expression","src","codesample","length","type","on","click","$event","next","question_id","randomquiz_id","quiz","Done","staticRenderFns","takequizvue_type_script_lang_js_Question","Question","pk","answers","Object","classCallCheck","takequizvue_type_script_lang_js_","name","data","questions","quizquestions","radioStyle","display","height","lineHeight","listint","components","ARow","Row","DevHeader","CandidateSider","mounted","_mounted","asyncToGenerator","regeneratorRuntime","mark","_callee","auth","randlist","randquizids","j","i","_j","_i","_i2","one_question","wrap","_context","prev","headers","Authorization","$store","state","token","QuizService","takequiz","user","$route","params","quizId","sent","push","split","Number","stop","apply","arguments","methods","navigateTo","route","$router","randomquizid","quiz_id","index","indexOf","splice","newquestionlist","join","postanswer","student","then","updaterandomquiz","catch","score","refresh","quiz_takequizvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","_services_Api__WEBPACK_IMPORTED_MODULE_0__","allquizzes","Api","get","concat","candidate","instance","post","taken","patch"],"mappings":"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","file":"js/chunk-7b540223.29d4654c.js","sourcesContent":["import mod from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./takequiz.vue?vue&type=style&index=0&id=4c303b68&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./takequiz.vue?vue&type=style&index=0&id=4c303b68&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a-layout',{staticStyle:{\"min-height\":\"100vh\"},attrs:{\"id\":\"components-layout-demo-side\"}},[_c('CandidateSider'),_c('a-layout',[_c('a-layout-content',{staticStyle:{\"background-color\":\"white\"}},[_c('DevHeader'),_c('div',{style:({ padding: '5px', background: '#fff',marginTop:'1rem' })},[_c('div',[_c('a-progress',{staticStyle:{\"padding-right\":\"2%\",\"padding-left\":\"2%\",\"padding-top\":\"2%\"},attrs:{\"percent\":_vm.percent}}),_c('a-form',{attrs:{\"form\":_vm.form}},[_c('div',{staticClass:\"steps-content\"},[_c('a-row',[_c('a-col',{attrs:{\"xs\":{span: 24, offset: 0  },\"sm\":{span: 24, offset: 0 },\"md\":{span: 12, offset: 0 },\"lg\":{span: 12, offset: 0 },\"xl\":{span: 12,offset: 0 }}},[_c('p',[_vm._v(_vm._s(_vm.steps[_vm.current].text))]),_c('a-form-item',[(_vm.error)?_c('p',{staticStyle:{\"color\":\"red\"}},[_vm._v(_vm._s(_vm.error))]):_vm._e(),_vm._l((_vm.steps[_vm.current].answers),function(answer){return _c('a-radio-group',{key:answer,model:{value:(_vm.currentanswer),callback:function ($$v) {_vm.currentanswer=$$v},expression:\"currentanswer\"}},[_c('a-radio',{style:(_vm.radioStyle),attrs:{\"value\":answer}},[_vm._v(\"\\n                                                \"+_vm._s(answer.text)+\"\\n                                            \")])],1)})],2)],1),_c('a-col',{attrs:{\"xs\":{span: 24, offset: 0  },\"sm\":{span: 24, offset: 0 },\"md\":{span: 12, offset: 0 },\"lg\":{span: 12, offset: 0 },\"xl\":{span: 12,offset: 0 }}},[_c('img',{attrs:{\"src\":_vm.steps[_vm.current].codesample}})])],1)],1),_c('div',{staticClass:\"steps-action\"},[(_vm.current < _vm.steps.length - 1)?_c('a-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.next(_vm.currentanswer,_vm.steps[_vm.current].question_id,_vm.randomquiz_id,_vm.steps[_vm.current].quiz)}}},[_vm._v(\"\\n                                Next\\n                            \")]):_vm._e(),(_vm.current == _vm.steps.length - 1)?_c('a-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.Done(_vm.currentanswer,_vm.steps[_vm.current].key,_vm.randomquiz_id,_vm.steps[_vm.current].quiz)}}},[_vm._v(\"\\n                                Finish\\n                            \")]):_vm._e()],1)])],1)])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <a-layout id=\"components-layout-demo-side\" style=\"min-height: 100vh\">\n        <CandidateSider/>\n        <a-layout>\n\n            <a-layout-content style=\"background-color: white\">\n                <DevHeader/>\n                <div :style=\"{ padding: '5px', background: '#fff',marginTop:'1rem' }\">\n\n                    <div>\n                        <a-progress :percent=\"percent\" style=\"padding-right: 2%;padding-left: 2%;padding-top: 2%\"/>\n                        <a-form :form=\"form\">\n                            <div class=\"steps-content\">\n\n                                <a-row>\n                                    <a-col :xs=\"{span: 24, offset: 0  }\" :sm=\"{span: 24, offset: 0 }\"\n                                           :md=\"{span: 12, offset: 0 }\"\n                                           :lg=\"{span: 12, offset: 0 }\" :xl=\"{span: 12,offset: 0 }\">\n                                        <p>{{steps[current].text}}</p>\n\n                                        <a-form-item>\n                                            <p v-if=\"error\" style=\"color: red\">{{error}}</p>\n                                            <a-radio-group v-model=\"currentanswer\"\n                                                           v-for=\"answer in steps[current].answers\" v-bind:key=\"answer\"\n                                            >\n                                                <a-radio :style=\"radioStyle\" :value=\"answer\">\n                                                    {{answer.text}}\n                                                </a-radio>\n\n                                            </a-radio-group>\n                                        </a-form-item>\n\n\n                                    </a-col>\n                                    <a-col :xs=\"{span: 24, offset: 0  }\" :sm=\"{span: 24, offset: 0 }\"\n                                           :md=\"{span: 12, offset: 0 }\"\n                                           :lg=\"{span: 12, offset: 0 }\" :xl=\"{span: 12,offset: 0 }\">\n                                        <img :src=\"steps[current].codesample\">\n                                    </a-col>\n\n                                </a-row>\n\n                            </div>\n                            <div class=\"steps-action\">\n\n                                <a-button\n                                        v-if=\"current < steps.length - 1\"\n                                        type=\"primary\"\n                                        @click=\"next(currentanswer,steps[current].question_id,randomquiz_id,steps[current].quiz)\"\n\n                                >\n                                    Next\n                                </a-button>\n                                <a-button\n                                        v-if=\"current == steps.length - 1\"\n                                        type=\"primary\"\n                                        @click=\"Done(currentanswer,steps[current].key,randomquiz_id,steps[current].quiz)\"\n                                >\n                                    Finish\n                                </a-button>\n\n                            </div>\n\n                        </a-form>\n\n                    </div>\n\n\n                </div>\n\n\n            </a-layout-content>\n\n\n        </a-layout>\n    </a-layout>\n\n</template>\n\n<script>\n    import ARow from \"ant-design-vue/es/grid/Row\";\n\n    class Question {\n        constructor(pk, id, text, answers, quiz, codesample) {\n            this.randomquiz_id = pk;\n            this.question_id = id;\n            this.text = text;\n            this.answers = answers;\n            this.codesample = codesample;\n            this.quiz = quiz;\n\n\n        }\n    }\n\n    import CandidateSider from \"../../../layout/CandidateSider\";\n    import DevHeader from \"../../../layout/DevHeader\";\n    import QuizService from '@/services/QuizService';\n\n\n    export default {\n        name: \"takequiz\",\n        data() {\n            return {\n                quiz: null,\n                questions: null,\n                quizquestions: [],\n                current: 0,\n                steps: [],\n                radioStyle: {\n                    display: 'block',\n                    height: '30px',\n                    lineHeight: '30px',\n                },\n                currentanswer: null,\n                error: null,\n                listint: [],\n                randomquiz_id: null,\n                percent: 0\n\n            }\n        },\n        components: {\n\n            ARow,\n            DevHeader,\n            CandidateSider,\n\n        },\n        async mounted() {\n            const auth = {\n                headers: {Authorization: 'JWT ' + this.$store.state.token}\n\n            }\n            this.quiz = (await QuizService.takequiz(this.$store.state.user.pk, this.$route.params.quizId, auth)).data;\n            this.questions = (await QuizService.questions(this.$route.params.quizId, auth)).data;\n            let randlist\n            let randquizids = []\n            for (let j = 0; j < this.quiz.length; j++) {\n                randquizids.push(this.quiz[j].id)\n                randlist = this.quiz[j].questions.split(',')\n\n            }\n\n            this.randomquiz_id = randquizids[0]\n\n\n            for (let i = 0; i < randlist.length; i++) {\n                this.listint.push(Number(randlist[i]))\n            }\n\n            this.percent = 100 - (this.listint.length / 30 * 100)\n\n\n            for (let j = 0; j < this.listint.length; j++) {\n                for (let i = 0; i < this.questions.length; i++) {\n\n                    if (this.questions[i].id === this.listint[j]) {\n                        this.quizquestions.push(this.questions[i])\n                    }\n                }\n            }\n            for (let i = 0; i < this.quizquestions.length; i++) {\n                let pk = this.randomquiz_id\n                let id = this.quizquestions[i].id\n                let text = this.quizquestions[i].text\n                let answers = this.quizquestions[i].answers\n                let quiz = this.quizquestions[i].quiz\n                let codesample = this.quizquestions[i].codesample\n\n                let one_question = new Question(\n                    pk, id, text, answers, quiz, codesample\n                );\n                this.steps.push(one_question)\n\n            }\n\n\n\n\n        },\n        methods: {\n            navigateTo(route) {\n                this.$router.push(route);\n            },\n\n            next(answer, question_id, randomquizid, quiz_id) {\n                const auth = {\n                    headers: {Authorization: 'JWT ' + this.$store.state.token}\n\n                }\n                if (answer !== null) {\n\n\n                    let index = this.listint.indexOf(question_id);\n                    this.listint.splice(index, 1);\n\n                    let newquestionlist = this.listint.join()\n                    QuizService.postanswer({\n                        answer: answer.id,\n                        student: this.$store.state.user.pk,\n                        quiz: quiz_id\n                    }, auth)\n                        .then(\n                            QuizService.updaterandomquiz(randomquizid, {questions: newquestionlist}, auth)\n                                .then(\n                                    this.current++,\n                                    this.currentanswer = null,\n                                    this.error = null,\n                                    this.percent = 100 - (this.listint.length / 30 * 100)\n                                ).catch(\n\n                            )\n                        )\n                        .catch()\n\n\n                } else {\n                    this.error = 'please pick one'\n                }\n\n\n            },\n            Done(answer, question_id, randomquizid, quiz_id) {\n                const auth = {\n                    headers: {Authorization: 'JWT ' + this.$store.state.token}\n\n                }\n                if (answer !== null) {\n                    let index = this.listint.indexOf(question_id);\n                    this.listint.splice(index, 1);\n\n                    let newquestionlist = this.listint.join()\n                    QuizService.postanswer({\n                        answer: answer.id,\n                        student: this.$store.state.user.pk,\n                        quiz: quiz_id\n                    }, auth)\n                        .then(\n                            QuizService.updaterandomquiz(randomquizid, {questions: newquestionlist}, auth)\n                                .then(\n                                    QuizService.score(this.$store.state.user.pk, quiz_id, auth)\n                                        .then(\n                                            this.current++,\n                                            this.currentanswer = null,\n                                            this.error = null,\n                                            this.percent = 100 - (this.listint.length / 30 * 100),\n                                            this.$router.push({\n                                                name: 'quizlist'\n                                            })\n                                        )\n                                        .catch()\n                                ).catch(\n\n                            )\n                        )\n                        .catch()\n                } else {\n                    this.error = 'please pick one'\n                }\n\n            },\n            refresh(){\n\n            }\n\n        }\n    }\n</script>\n\n<style scoped>\n    .steps-content {\n        margin-top: 16px;\n        border: 1px dashed #e9e9e9;\n        border-radius: 6px;\n        background-color: #fafafa;\n        min-height: 200px;\n        padding: 2%;\n        margin-left: 2%;\n        margin-right: 2%;\n    }\n\n    .steps-action {\n        margin-top: 24px;\n        margin-left: 2%;\n        margin-right: 2%;\n    }\n\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./takequiz.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./takequiz.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./takequiz.vue?vue&type=template&id=4c303b68&scoped=true&\"\nimport script from \"./takequiz.vue?vue&type=script&lang=js&\"\nexport * from \"./takequiz.vue?vue&type=script&lang=js&\"\nimport style0 from \"./takequiz.vue?vue&type=style&index=0&id=4c303b68&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4c303b68\",\n  null\n  \n)\n\nexport default component.exports","import Api from '@/services/Api'\n\nexport default {\n    allquizzes(auth) {\n        return Api().get('allquizzes', auth)\n    },\n    questions(quiz,auth) {\n        return Api().get(`questions/${quiz}`, auth)\n    },\n    takequiz(candidate,quiz,auth){\n        return Api().get(`takequiz/${candidate}/${quiz}`,auth)\n    },\n    postanswer(instance,auth){\n        return Api().post('postanswer',instance, auth)\n\n    },\n    score(candidate,quiz,auth){\n        return Api().get(`score/${candidate}/${quiz}`, auth)\n\n    },\n    taken(candidate,auth){\n        return Api().get(`taken/${candidate}`, auth)\n\n    },\n    updaterandomquiz(randomquizid, questions, auth) {\n        return Api().patch(`updaterandquiz/${randomquizid} `, questions, auth)\n    },\n\n}\n"],"sourceRoot":""}