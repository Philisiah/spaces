{"version":3,"sources":["webpack:///./src/components/frontend/developer/quiz/takequiz.vue?84d5","webpack:///./src/components/frontend/developer/quiz/takequiz.vue?8868","webpack:///src/components/frontend/developer/quiz/takequiz.vue","webpack:///./src/components/frontend/developer/quiz/takequiz.vue?9a66","webpack:///./src/components/frontend/developer/quiz/takequiz.vue","webpack:///./src/services/QuizService.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","attrs","style","padding","background","marginTop","percent","form","staticClass","span","offset","_v","_s","steps","current","text","error","_e","_l","answer","key","model","value","callback","$$v","currentanswer","expression","codesample","length","on","$event","next","question_id","randomquiz_id","quiz","Done","staticRenderFns","headers","randquizids","push","j","id","randlist","questions","split","listint","Number","i","one_question","component","allquizzes","auth","Api","get","allsubjects","takequiz","candidate","postanswer","instance","post","score","taken","updaterandomquiz","randomquizid","patch"],"mappings":"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","file":"js/chunk-7b540223.d1cfeef5.js","sourcesContent":["import mod from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./takequiz.vue?vue&type=style&index=0&id=4c303b68&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./takequiz.vue?vue&type=style&index=0&id=4c303b68&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a-layout',{staticStyle:{\"min-height\":\"100vh\"},attrs:{\"id\":\"components-layout-demo-side\"}},[_c('CandidateSider'),_c('a-layout',[_c('a-layout-content',{staticStyle:{\"background-color\":\"white\"}},[_c('DevHeader'),_c('div',{style:({ padding: '5px', background: '#fff',marginTop:'1rem' })},[_c('div',[_c('a-progress',{staticStyle:{\"padding-right\":\"2%\",\"padding-left\":\"2%\",\"padding-top\":\"2%\"},attrs:{\"percent\":_vm.percent}}),_c('a-form',{attrs:{\"form\":_vm.form}},[_c('div',{staticClass:\"steps-content\"},[_c('a-row',[_c('a-col',{attrs:{\"xs\":{span: 24, offset: 0  },\"sm\":{span: 24, offset: 0 },\"md\":{span: 12, offset: 0 },\"lg\":{span: 12, offset: 0 },\"xl\":{span: 12,offset: 0 }}},[_c('p',[_vm._v(_vm._s(_vm.steps[_vm.current].text))]),_c('a-form-item',[(_vm.error)?_c('p',{staticStyle:{\"color\":\"red\"}},[_vm._v(_vm._s(_vm.error))]):_vm._e(),_vm._l((_vm.steps[_vm.current].answers),function(answer){return _c('a-radio-group',{key:answer,model:{value:(_vm.currentanswer),callback:function ($$v) {_vm.currentanswer=$$v},expression:\"currentanswer\"}},[_c('a-radio',{style:(_vm.radioStyle),attrs:{\"value\":answer}},[_vm._v(\"\\n                                                \"+_vm._s(answer.text)+\"\\n                                            \")])],1)})],2)],1),_c('a-col',{attrs:{\"xs\":{span: 24, offset: 0  },\"sm\":{span: 24, offset: 0 },\"md\":{span: 12, offset: 0 },\"lg\":{span: 12, offset: 0 },\"xl\":{span: 12,offset: 0 }}},[_c('img',{attrs:{\"src\":_vm.steps[_vm.current].codesample}})])],1)],1),_c('div',{staticClass:\"steps-action\"},[(_vm.current < _vm.steps.length - 1)?_c('a-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.next(_vm.currentanswer,_vm.steps[_vm.current].question_id,_vm.randomquiz_id,_vm.steps[_vm.current].quiz)}}},[_vm._v(\"\\n                                Next\\n                            \")]):_vm._e(),(_vm.current == _vm.steps.length - 1)?_c('a-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.Done(_vm.currentanswer,_vm.steps[_vm.current].key,_vm.randomquiz_id,_vm.steps[_vm.current].quiz)}}},[_vm._v(\"\\n                                Finish\\n                            \")]):_vm._e()],1)])],1)])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <a-layout id=\"components-layout-demo-side\" style=\"min-height: 100vh\">\n        <CandidateSider/>\n        <a-layout>\n\n            <a-layout-content style=\"background-color: white\">\n                <DevHeader/>\n                <div :style=\"{ padding: '5px', background: '#fff',marginTop:'1rem' }\">\n\n                    <div>\n                        <a-progress :percent=\"percent\" style=\"padding-right: 2%;padding-left: 2%;padding-top: 2%\"/>\n                        <a-form :form=\"form\">\n                            <div class=\"steps-content\">\n\n                                <a-row>\n                                    <a-col :xs=\"{span: 24, offset: 0  }\" :sm=\"{span: 24, offset: 0 }\"\n                                           :md=\"{span: 12, offset: 0 }\"\n                                           :lg=\"{span: 12, offset: 0 }\" :xl=\"{span: 12,offset: 0 }\">\n                                        <p>{{steps[current].text}}</p>\n\n                                        <a-form-item>\n                                            <p v-if=\"error\" style=\"color: red\">{{error}}</p>\n                                            <a-radio-group v-model=\"currentanswer\"\n                                                           v-for=\"answer in steps[current].answers\" v-bind:key=\"answer\"\n                                            >\n                                                <a-radio :style=\"radioStyle\" :value=\"answer\">\n                                                    {{answer.text}}\n                                                </a-radio>\n\n                                            </a-radio-group>\n                                        </a-form-item>\n\n\n                                    </a-col>\n                                    <a-col :xs=\"{span: 24, offset: 0  }\" :sm=\"{span: 24, offset: 0 }\"\n                                           :md=\"{span: 12, offset: 0 }\"\n                                           :lg=\"{span: 12, offset: 0 }\" :xl=\"{span: 12,offset: 0 }\">\n                                        <img :src=\"steps[current].codesample\">\n                                    </a-col>\n\n                                </a-row>\n\n                            </div>\n                            <div class=\"steps-action\">\n\n                                <a-button\n                                        v-if=\"current < steps.length - 1\"\n                                        type=\"primary\"\n                                        @click=\"next(currentanswer,steps[current].question_id,randomquiz_id,steps[current].quiz)\"\n\n                                >\n                                    Next\n                                </a-button>\n                                <a-button\n                                        v-if=\"current == steps.length - 1\"\n                                        type=\"primary\"\n                                        @click=\"Done(currentanswer,steps[current].key,randomquiz_id,steps[current].quiz)\"\n                                >\n                                    Finish\n                                </a-button>\n\n                            </div>\n\n                        </a-form>\n\n                    </div>\n\n\n                </div>\n\n\n            </a-layout-content>\n\n\n        </a-layout>\n    </a-layout>\n\n</template>\n\n<script>\n    import ARow from \"ant-design-vue/es/grid/Row\";\n\n    class Question {\n        constructor(pk, id, text, answers, quiz, codesample) {\n            this.randomquiz_id = pk;\n            this.question_id = id;\n            this.text = text;\n            this.answers = answers;\n            this.codesample = codesample;\n            this.quiz = quiz;\n\n\n        }\n    }\n\n    import CandidateSider from \"../../../layout/CandidateSider\";\n    import DevHeader from \"../../../layout/DevHeader\";\n    import QuizService from '@/services/QuizService';\n\n\n    export default {\n        name: \"takequiz\",\n        data() {\n            return {\n                quiz: null,\n                questions: null,\n                quizquestions: [],\n                current: 0,\n                steps: [],\n                radioStyle: {\n                    display: 'block',\n                    height: '30px',\n                    lineHeight: '30px',\n                },\n                currentanswer: null,\n                error: null,\n                listint: [],\n                randomquiz_id: null,\n                percent: 0\n\n            }\n        },\n        components: {\n\n            ARow,\n            DevHeader,\n            CandidateSider,\n\n        },\n        async mounted() {\n            const auth = {\n                headers: {Authorization: 'JWT ' + this.$store.state.token}\n\n            }\n            this.quiz = (await QuizService.takequiz(this.$store.state.user.pk, this.$route.params.quizId, auth)).data;\n            this.questions = (await QuizService.questions(this.$route.params.quizId, auth)).data;\n            let randlist\n            let randquizids = []\n            for (let j = 0; j < this.quiz.length; j++) {\n                randquizids.push(this.quiz[j].id)\n                randlist = this.quiz[j].questions.split(',')\n\n            }\n\n            this.randomquiz_id = randquizids[0]\n\n\n            for (let i = 0; i < randlist.length; i++) {\n                this.listint.push(Number(randlist[i]))\n            }\n\n            this.percent = 100 - (this.listint.length / 30 * 100)\n\n\n            for (let j = 0; j < this.listint.length; j++) {\n                for (let i = 0; i < this.questions.length; i++) {\n\n                    if (this.questions[i].id === this.listint[j]) {\n                        this.quizquestions.push(this.questions[i])\n                    }\n                }\n            }\n            for (let i = 0; i < this.quizquestions.length; i++) {\n                let pk = this.randomquiz_id\n                let id = this.quizquestions[i].id\n                let text = this.quizquestions[i].text\n                let answers = this.quizquestions[i].answers\n                let quiz = this.quizquestions[i].quiz\n                let codesample = this.quizquestions[i].codesample\n\n                let one_question = new Question(\n                    pk, id, text, answers, quiz, codesample\n                );\n                this.steps.push(one_question)\n\n            }\n\n\n\n\n        },\n        methods: {\n            navigateTo(route) {\n                this.$router.push(route);\n            },\n\n            next(answer, question_id, randomquizid, quiz_id) {\n                const auth = {\n                    headers: {Authorization: 'JWT ' + this.$store.state.token}\n\n                }\n                if (answer !== null) {\n\n\n                    let index = this.listint.indexOf(question_id);\n                    this.listint.splice(index, 1);\n\n                    let newquestionlist = this.listint.join()\n                    QuizService.postanswer({\n                        answer: answer.id,\n                        student: this.$store.state.user.pk,\n                        quiz: quiz_id\n                    }, auth)\n                        .then(\n                            QuizService.updaterandomquiz(randomquizid, {questions: newquestionlist}, auth)\n                                .then(\n                                    this.current++,\n                                    this.currentanswer = null,\n                                    this.error = null,\n                                    this.percent = 100 - (this.listint.length / 30 * 100)\n                                ).catch(\n\n                            )\n                        )\n                        .catch()\n\n\n                } else {\n                    this.error = 'please pick one'\n                }\n\n\n            },\n            Done(answer, question_id, randomquizid, quiz_id) {\n                const auth = {\n                    headers: {Authorization: 'JWT ' + this.$store.state.token}\n\n                }\n                if (answer !== null) {\n                    let index = this.listint.indexOf(question_id);\n                    this.listint.splice(index, 1);\n\n                    let newquestionlist = this.listint.join()\n                    QuizService.postanswer({\n                        answer: answer.id,\n                        student: this.$store.state.user.pk,\n                        quiz: quiz_id\n                    }, auth)\n                        .then(\n                            QuizService.updaterandomquiz(randomquizid, {questions: newquestionlist}, auth)\n                                .then(\n                                    QuizService.score(this.$store.state.user.pk, quiz_id, auth)\n                                        .then(\n                                            this.current++,\n                                            this.currentanswer = null,\n                                            this.error = null,\n                                            this.percent = 100 - (this.listint.length / 30 * 100),\n                                            this.$router.push({\n                                                name: 'quizlist'\n                                            })\n                                        )\n                                        .catch()\n                                ).catch(\n\n                            )\n                        )\n                        .catch()\n                } else {\n                    this.error = 'please pick one'\n                }\n\n            },\n            refresh(){\n\n            }\n\n        }\n    }\n</script>\n\n<style scoped>\n    .steps-content {\n        margin-top: 16px;\n        border: 1px dashed #e9e9e9;\n        border-radius: 6px;\n        background-color: #fafafa;\n        min-height: 200px;\n        padding: 2%;\n        margin-left: 2%;\n        margin-right: 2%;\n    }\n\n    .steps-action {\n        margin-top: 24px;\n        margin-left: 2%;\n        margin-right: 2%;\n    }\n\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./takequiz.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./takequiz.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./takequiz.vue?vue&type=template&id=4c303b68&scoped=true&\"\nimport script from \"./takequiz.vue?vue&type=script&lang=js&\"\nexport * from \"./takequiz.vue?vue&type=script&lang=js&\"\nimport style0 from \"./takequiz.vue?vue&type=style&index=0&id=4c303b68&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4c303b68\",\n  null\n  \n)\n\nexport default component.exports","import Api from '@/services/Api'\n\nexport default {\n    allquizzes(auth) {\n        return Api().get('allquizzes', auth)\n    },\n    allsubjects(auth) {\n        return Api().get('subjects', auth)\n    },\n    questions(quiz,auth) {\n        return Api().get(`questions/${quiz}`, auth)\n    },\n    takequiz(candidate,quiz,auth){\n        return Api().get(`takequiz/${candidate}/${quiz}`,auth)\n    },\n    postanswer(instance,auth){\n        return Api().post('postanswer',instance, auth)\n\n    },\n    score(candidate,quiz,auth){\n        return Api().get(`score/${candidate}/${quiz}`, auth)\n\n    },\n    taken(candidate,auth){\n        return Api().get(`taken/${candidate}`, auth)\n\n    },\n    updaterandomquiz(randomquizid, questions, auth) {\n        return Api().patch(`updaterandquiz/${randomquizid} `, questions, auth)\n    },\n\n}\n"],"sourceRoot":""}